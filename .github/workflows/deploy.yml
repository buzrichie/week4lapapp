name: Build and Deploy to ECS via CodePipeline (Blue/Green)

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=latest
          ECR_REPO_URI=${{ secrets.ECR_REPOSITORY_URI }}
          echo "Building Docker image..."
          docker build -t $ECR_REPO_URI:$IMAGE_TAG .
          docker push $ECR_REPO_URI:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_REPO_URI:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Prepare deployment artifacts
        run: |
          # Replace image URI inside taskdef.json
          sed -i "s|REPLACE_IMAGE_URI|${IMAGE_URI}|g" taskdef.json

          # Zip taskdef + appspec
          zip deploy.zip appspec.yaml taskdef.json

          # Upload to S3 (artifact bucket)
          aws s3 cp deploy.zip s3://${{ secrets.ARTIFACT_BUCKET }}/deploy.zip

      - name: Trigger CodePipeline
        run: |
          aws codepipeline start-pipeline-execution --name ${{ secrets.CODEPIPELINE_NAME }}
