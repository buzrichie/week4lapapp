name: CI-CD to ECS

on:
  push:
    branches:
      - main   # adjust branch as needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ----------------------------
      # Checkout Code
      # ----------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # ----------------------------
      # Configure AWS Credentials
      # ----------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # change if needed

      # ----------------------------
      # Login to Amazon ECR
      # ----------------------------
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ----------------------------
      # Build, Tag, and Push Image
      # ----------------------------
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # e.g. myapp-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # ----------------------------
      # Render ECS Task Definition
      # ----------------------------
      - name: Render task definition
        run: |
          sed "s|<IMAGE>|${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}|g" taskdef.json > taskdef-rendered.json

      # ----------------------------
      # Prepare Deployment Artifacts
      # ----------------------------
      - name: Prepare deployment package
        run: |
          mkdir -p deployment-artifacts
          cp taskdef-rendered.json appspec.yml deployment-artifacts/
          cd deployment-artifacts && zip latest.zip taskdef-rendered.json appspec.yml

      # ----------------------------
      # Upload to S3 (Artifact Bucket)
      # ----------------------------
      - name: Upload artifacts to S3
        run: |
          aws s3 cp deployment-artifacts/latest.zip s3://${{ secrets.ARTIFACT_BUCKET }}/deployment-artifacts/latest.zip
